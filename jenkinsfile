pipeline {
    agent any
    tools{
        maven 'Maven-frank-1'
    }
    
    stages{
         stage('init') {
            steps {
                script{
                    def dockerPath = tool 'franktest' //全局配置里的docker
                    env.PATH = "${dockerPath}/bin:${env.PATH}" //添加了系统环境变量上
                }
            }
        }

        stage('Build'){
            steps {
                sh 'mvn clean package'
                sh "docker --version"
            }

            post {
                success {
                    echo '开始存档....'
                }
            }
        }

        stage('sonar'){

            environment {
                scannerHome = tool 'franktest'
            }

            steps {
                echo "start SonarQubeEnv testing"

                    withSonarQubeEnv('franktest') {
                    sh '${scannerHome}/bin/sonar-scanner -Dproject.settings=custom_config/sonar-scanner.properties'
                }

                    timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
              }

              


            }
        }
    }
}


              