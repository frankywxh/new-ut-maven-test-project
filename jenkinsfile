pipeline {
    agent any
    tools{
        maven 'Maven-frank-1'
    }
    
    stages{
        

        stage('Build'){
            steps {
                sh 'mvn clean package'
                sh 'docker version'
                sh 'pwd'
                sh 'cd src/main/docker'
                sh "docker build -f Dockerfile -t frankwebsocket ."
                sh 'docker login --username=frank_pwc --password=milkv5v5 registry.cn-hangzhou.aliyuncs.com'
                sh 'docker tag frankwebsocket registry.cn-hangzhou.aliyuncs.com/frankywxh/jenkins:v1'
                sh 'docker push registry.cn-hangzhou.aliyuncs.com/frankywxh/jenkins:v1'
                sh 'docker run --name websockerproject -p 8083:8080 -d frankwebsocket'
            }

            post {
                success {
                    echo '开始存档....'
                }
            }
        }

        stage('sonar'){

            environment {
                scannerHome = tool 'franktest'
            }

            steps {
                echo "start SonarQubeEnv testing"

                    withSonarQubeEnv('franktest') {
                    sh '${scannerHome}/bin/sonar-scanner -Dproject.settings=sonar-scanner.properties'
                }

                    timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }


            }
            post {
                always{
                    junit allowEmptyResults: true, testResults: '**/pipelinejob-test/*.xml'
                }
            }
        }


        /*stage('Trigger'){
            steps {
                build job:"webhook-trigger"
            }
                
            stage('Jmeter') {
                steps {
                sh 'sudo pip install bzt'
                sh 'sudo pip install virtualenv'
                bzt params: 'pipeinejob-test-config.yml'
                }
            }
        }*/
    }
}       