pipeline {
    agent any
    tools{
        maven 'Maven-frank-1'
    }
    
    stages{
        

        /*stage('Deploy'){
            steps {
                sh 'docker rm -f websockerproject'
                sh 'docker pull registry.cn-hangzhou.aliyuncs.com/frankywxh/jenkins:v1'
                sh 'docker run --name websockerproject -p 8083:8080 -d registry.cn-hangzhou.aliyuncs.com/frankywxh/jenkins:v1'
            
            }

            post {
                success {
                    echo '正在构建!'
                }
            }
        }*/

        /*stage('Jmeter') { 
            steps {
                sh 'cd /var/jenkins_home/workspace/webhook-trigger/src/main/Jmeter'

                sh '/opt/apache-jmeter-3.2/bin/jmeter -n -t src/main/Jmeter/franktest.jmx  -l src/main/Jmeter/frank.jtl -e -o src/main/Jmeter/output'
                //sh 'xsltproc src/main/Jmeter/frank.jtl > src/main/Jmeter/output/frank.html'
                step([$class: 'ArtifactArchiver', artifacts: 'src/main/Jmeter/output/*'])
                //perfReport "src/main/Jmeter/frank.jtl"
            }
        }*/

        stage('BlackDuck') {
            steps {
                    openshiftBuild(buildConfig: 'myphp', showBuildLogs: 'true')
                    openshiftVerifyBuild(buildConfig: 'myphp')
                    hub_scan bomUpdateMaxiumWaitTime: '5', dryRun: false, hubProjectName: 'practicesafedevops', hubProjectVersion: '1.0', hubVersionDist: 'OPENSOURCE', hubVersionPhase: 'DEVELOPMENT', scanMemory: '4096', scans: [[scanTarget: '']], shouldGenerateHubReport: true
                    openshiftDeploy(deploymentConfig: 'myphp')
                    openshiftScale(deploymentConfig: 'myphp',replicaCount: '1')
                    step([$class: 'GitHubCommitStatusSetter'])
                    step([$class: 'GitHubIssueNotifier', useCustomTemplate: false])
            }
        }
    }
}


              